File.h: In member function ‘std::vector<std::basic_string<char> > Directory::getListDirectory()’:
File.h:111:27: error: no matching function for call to ‘is_directory(boost::filesystem::directory_iterator&)’
     if(fs::is_directory(it)) lst.push_back(it.path().string());
                           ^
File.h:111:27: note: candidates are:
In file included from /usr/include/boost/filesystem.hpp:17:0,
                 from File.h:5:
/usr/include/boost/filesystem/operations.hpp:176:15: note: bool boost::filesystem::is_directory(boost::filesystem::file_status)
   inline bool is_directory(file_status f) { return f.type() == directory_file; }
               ^
/usr/include/boost/filesystem/operations.hpp:176:15: note:   no known conversion for argument 1 from ‘boost::filesystem::directory_iterator’ to ‘boost::filesystem::file_status’
/usr/include/boost/filesystem/operations.hpp:294:8: note: bool boost::filesystem::is_directory(const boost::filesystem::path&)
   bool is_directory(const path& p)     {return is_directory(detail::status(p));}
        ^
/usr/include/boost/filesystem/operations.hpp:294:8: note:   no known conversion for argument 1 from ‘boost::filesystem::directory_iterator’ to ‘const boost::filesystem::path&’
/usr/include/boost/filesystem/operations.hpp:296:8: note: bool boost::filesystem::is_directory(const boost::filesystem::path&, boost::system::error_code&)
   bool is_directory(const path& p, system::error_code& ec)
        ^
/usr/include/boost/filesystem/operations.hpp:296:8: note:   candidate expects 2 arguments, 1 provided
File.h:111:47: error: ‘class boost::filesystem::directory_iterator’ has no member named ‘path’
     if(fs::is_directory(it)) lst.push_back(it.path().string());
                                               ^
File.h: In member function ‘std::vector<std::basic_string<char> > Directory::getListFile()’:
File.h:130:30: error: no matching function for call to ‘is_regular_file(boost::filesystem::directory_iterator&)’
     if(fs::is_regular_file(it)) lst.push_back(it.path().string());
                              ^
File.h:130:30: note: candidates are:
In file included from /usr/include/boost/filesystem.hpp:17:0,
                 from File.h:5:
/usr/include/boost/filesystem/operations.hpp:175:15: note: bool boost::filesystem::is_regular_file(boost::filesystem::file_status)
   inline bool is_regular_file(file_status f){ return f.type() == regular_file; }
               ^
/usr/include/boost/filesystem/operations.hpp:175:15: note:   no known conversion for argument 1 from ‘boost::filesystem::directory_iterator’ to ‘boost::filesystem::file_status’
/usr/include/boost/filesystem/operations.hpp:299:8: note: bool boost::filesystem::is_regular_file(const boost::filesystem::path&)
   bool is_regular_file(const path& p)  {return is_regular_file(detail::status(p));}
        ^
/usr/include/boost/filesystem/operations.hpp:299:8: note:   no known conversion for argument 1 from ‘boost::filesystem::directory_iterator’ to ‘const boost::filesystem::path&’
/usr/include/boost/filesystem/operations.hpp:301:8: note: bool boost::filesystem::is_regular_file(const boost::filesystem::path&, boost::system::error_code&)
   bool is_regular_file(const path& p, system::error_code& ec)
        ^
/usr/include/boost/filesystem/operations.hpp:301:8: note:   candidate expects 2 arguments, 1 provided
File.h:130:50: error: ‘class boost::filesystem::directory_iterator’ has no member named ‘path’
     if(fs::is_regular_file(it)) lst.push_back(it.path().string());
                                                  ^
File.h: In member function ‘std::vector<std::basic_string<char> > Directory::getListFileWithExtension(const string&)’:
File.h:149:30: error: no matching function for call to ‘is_regular_file(boost::filesystem::directory_iterator&)’
     if(fs::is_regular_file(it)&&it.path().extension().string()==extension) lst.push_back(it.path().string());
                              ^
File.h:149:30: note: candidates are:
In file included from /usr/include/boost/filesystem.hpp:17:0,
                 from File.h:5:
/usr/include/boost/filesystem/operations.hpp:175:15: note: bool boost::filesystem::is_regular_file(boost::filesystem::file_status)
   inline bool is_regular_file(file_status f){ return f.type() == regular_file; }
               ^
/usr/include/boost/filesystem/operations.hpp:175:15: note:   no known conversion for argument 1 from ‘boost::filesystem::directory_iterator’ to ‘boost::filesystem::file_status’
/usr/include/boost/filesystem/operations.hpp:299:8: note: bool boost::filesystem::is_regular_file(const boost::filesystem::path&)
   bool is_regular_file(const path& p)  {return is_regular_file(detail::status(p));}
        ^
/usr/include/boost/filesystem/operations.hpp:299:8: note:   no known conversion for argument 1 from ‘boost::filesystem::directory_iterator’ to ‘const boost::filesystem::path&’
/usr/include/boost/filesystem/operations.hpp:301:8: note: bool boost::filesystem::is_regular_file(const boost::filesystem::path&, boost::system::error_code&)
   bool is_regular_file(const path& p, system::error_code& ec)
        ^
/usr/include/boost/filesystem/operations.hpp:301:8: note:   candidate expects 2 arguments, 1 provided
File.h:149:36: error: ‘class boost::filesystem::directory_iterator’ has no member named ‘path’
     if(fs::is_regular_file(it)&&it.path().extension().string()==extension) lst.push_back(it.path().string());
                                    ^
File.h:149:93: error: ‘class boost::filesystem::directory_iterator’ has no member named ‘path’
     if(fs::is_regular_file(it)&&it.path().extension().string()==extension) lst.push_back(it.path().string());
                                                                                             ^
